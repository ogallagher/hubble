√ category icon√ help icon√ author icon√ description icon√ tag icon√ use window.prompt() for search√ loading display√ send search request to server w/ data object√ read search requests in the server√ execute search requests server-side; oscillation from lexicographical origin√ load search results into bubble tree√ add Box option for Bubble.link√ shift bubbles with dialogue to the corner in mobile browsers√ create search.name and search.tags once the server returns matching games√ add some more example/fake games into the games.json file server-side√ don't display bubble.link if it contains a / character√ remove games.categories√ add games.tags to bubble tree√ name icon√ enable games.image display for both featured games and searched games√ initiate a new search by tag when a game.tags.bubble is selected, or when a categories.bubble is selected√ rewrite search algorithm to factor in the games' ratings√ enable client to rate games (only after creating an account with an email address and password)√ √ client: edit /login to store incoming account.reviews√ √ client: add # (1-5) bubbles that branch off of games.rating√ √ √ in response to searched (name,tag) game additions√ √ √ in response to /featured game additions√ √ √ #.fill is determined by numStars OR account.reviews√ √ √ √ numStars = bubble.label.name if (bubble.link == “/rate” && this.focused)√ √ √ √ if (numStars >= #.label.name || #.focused), fill(255) √ √ √ if address == "", prompt for the user to register or log in on select()√ √ √ if address.length > 0, add branches to game.rating, which send /rate get to server on select()√ √ √ handle server’s response to /rate: update game.rating and account.reviews√ √ √ √ fix alterations of game.rating and account.reviews. The former appends as a string, and the latter doesn’t seem to change at all -> I think the query’s JSON wasn’t parsed correctly server-side√ √ server: add game.reviews to store the number of people that have rated the game√ √ server: add account.reviews to store the games and that users have rated, and what ratings they gave (account.reviews.[game,rating])√ √ √ edit /register handler function√ √ server: handle /rate html get√ √ √ to update, game.rating = (game.rating * game.reviews / game.reviews+1) + (NEW_VALUE / game.reviews+1)√ √ √ if account.reviews contains this game already, game.rating += RATING_CHANGE / game.reviews√ √ √ update account.reviews√ √ √ send response to client√ enable dialogue box page flipping√ √ page splitting character will denote multiple pages√ √ bubble.book stores many-paged dialogue boxes√ √ update bubble.book.bookMark when bubble.select() is called and bubble.selected is true√ √ change bubble.displayText()√ add more games that are mobile-compatible and more varied in type√ server.addGame() function:√ √ add to games.byName[] lexicographically√ √ add to games.byRating[] according to current game.rating√ client: mobile: in displayText(), enable box movement to all 4 corners of the view√ enable registration and log-in√ √ client: add register bubble√ √ client: add login bubble√ √ client: add address variable√ √ client: register() function: email, password; send email;√ √ client: login() function: get email, password; send to server for verification; upon positive response, continue; upon negative response, alert failure√ √ server: use nodemailer.js to send the email to a specified destination account (origin server = gmail.com)√ √ server: handle /register and /login html requests√ √ server: add accounts.json to store emails and passwords√ √ server: use filesystems module to rewrite accounts.json in /register handling√ if bubble.link is a dialogue box, and if bubble.link.length < SEAL_MAX, display bubble.link around the bottom like label.name, but without grow/shrink and disappear√ fix authors bubble to display each author on a separate branch√ don’t display bubble.link in the corner if already displayed around the bubble√ fix display of bubble.label.name√ √ create client-wide and mobile-wide variable: hovering√ √ hovering = true, if (distance(bubble,cursor) < bubble.size*0.5 && touches.length > 0)√ √ background darkens√ √ increase circumference for bubble.label.name display√ √ create bubble.touched variable (to see which bubble is activating hovering)√ √ other bubbles darken√ server: fix search functions to not return repeat games√ category icons√ √ version√ √ multiplayer√ √ racing√ √ strategy√ √ action√ √ puzzle√ √ adventure√ if bubble.label.name is too long, show until NAME_MAX√ mobile: only call home.select() if tapped (not dragged and lifted)√ mobile: if background tapped, be able to go back to home without closing all branches√ register icon√ login icon√ server: create searchGames() functions to lessen redundancy in usage between /search response and /rate response√ encrypt passwords√ √ client: don’t permit spaces in passwords√ √ server: encrypt passwords before storing in accounts.json for registration√ √ server: encrypt incoming password to check if login is valid√ server: prevent redundant search results that appear for overlapping search terms√ server: update games.byTag’s order in the /rate request handler function by deleting the edited game from its current position and then putting it back according to newRating√ client: #bubble.fill if account.reviews contains it’s game and account.reviews[r].rating >= this.label.name√ client: don't mute stars in mobile√ client: don't deselect and return home after rating or trying to rate√ client: add account.information.[…]√ √ reviews√ √ username√ √ register date (bday)√ √ age√ √ curator status√ √ the above categories are stored in an info (i) bubble’s dialogue box√ sometimes passwords won’t save correctly and aren’t recognized by the server upon login…√ client: move cursor to center after release in select() function√ x client: move cursor to corner if bubble.link is a text box—— too difficult to implement; not worth the trouble√ client: add loading variable to Bubble class, so other bubbles don’t pulse when fetching information√ √ fix loading animation for origin bubbles, so they stop pulsing when their branches are no longer loading√ create way to add games√ √ client: add curate bubble branch off of the account bubble√ √ √ on select, if curator, open a prompt for:√ √ √ √ url,√ √ √ √ name (starts w/ capital letter, only letters, numbers, and spaces),√ √ √ √ description (inserts page breaks for lengthier ones),√ √ √ √ √ fix insertion to find first space before the character that hit the page maximum√ √ √ √ authors,√ √ √ √ rating, and√ √ √ √ tags√ √ √ √ then send /curate request to server with the specified curator and game data to be stored in submissions.json, until the hubble admin handles the new addition√ √ √ on select, it not curator, send /curate request to server√ √ server: create submissions.json√ √ server: add account.[curator,bday] and change registration and login handlers√ √ server: handle registration√ √ server: handle /curate request√ √ √ if account.curator, add submission to submissions.json√ √ √ else, change account.curator to null and send notary email to hubbleojpgapps@gmail.com√ √ √ new game_icons directory to be stored where the .json files are stored (the directory will be edited from the admin interface)√ √ create way to add game icons (file download prompt for admin)√ handle null possibility as account.curator√ make sure /featured and /search client responses handle my read errors sent from the server (when game icon files are not found)√ disable selection of hidden bubbles√ select account(or admin) bubble after login√ client: edit.accounts: set accounts bubble.loading to -1 when admin edit == null√ server: admin check against address instead of position in accounts array√ move .json files and game_icons directory so they aren’t overwritten√ fix file path environment variable √ x create /hubble_data directory on google drive with hubble account (hubble_google_drive)√ x add googleapis js module to the server√ x use googleapis to retrieve .json files from hubble_google_drive/hubble_data√ x add an sql database to hubble√ x x create and configure the database√ x x link database to hubble (grab pertinent credentials)√ x x x add mysql module to server√ x x x username: hubblegames√ x x x password: hubbleconnect√ x x x db name: hubbledb√ x x create dbinit.sql file√ x x x add tables to database√ x x x x accounts√ x x x x games√ x x x x submissions√ x x x fill tables√ x replace require() and fs.(read()/write()) functions with mysql code√ x x select√ x x insert√ x x delete√ √ add persistent storage volume hubblestorage in the /data directory√ √ √ move the .json and game_icons files there√ √ √ change path in server.js√ $npm ls showed many extraneous modules included in hubble that I can probably remove√ an old search result repetition bug seems to have returned√ bought the domain name hubblegames.site from iwantmyname.com for $10√ update url for shuffle√ √ in server add /shuffle get handler√ √ in hubble’s games.json√ √ add hubblegames.site/shuffle domain to iwantmyname.com’s index√ update (server.js).(/search) handler so nextGameBy_() functions are not defined in local scopes (should make it faster)√ logout button√ √ logout icon: arrow to rectangle, exit sign,…√ √ introduce logout bubble by replacing the register and login bubbles√ √ add /logout to Bubble.select()√ use invisible html form with image input for admin’s game icon file upload√ server.js: fix use of fileGames,fileAccounts,fileSubmissions for the new (proceed,fail) procedural arguments• write the help menu· √ read: tap on the bubble again to flip to the next page· √ return: tap on the background to return to the previous bubble· √ select: tap on a bubble to select it; drag the finger around to screen to see labels· √ search: tap the search bubble to insert search terms; tapping on tags and categories does so automatically· > rate: first, register an account and log in. Then, go to any game and select the rating bubble. 5 stars will appear, and you can choose however many you see fit.· > register: go to accounts, register and create email+password; then go to accounts,login…· √ play: select a game bubble to go to that game’s website· > curate: to request curator status, go to accounts, curate (you need to be logged in) and select it. If you’re already a curator, you are guided through your submission for a new game.> account.recover_password bubble√ add random bubble√ √ client: random icon√ √ client: create /random query from bubble√ √ server: /random html get handler returns a group of random games from games.byName√ √ client: add resultant game branches to random bubble√ √ client: update display(), fix references to searchedGames[]√ create admin interface for hubbleojpgapps@gmail.com (replace curate bubble with an edit.[accounts,games] bubble)√ x accounts√ x √ accounts.replace√ x √ √ open a prompt filled in with the current data from accounts.json√ x √ √ on close of prompt, accounts.json file is replaced with the edited version√ x x accounts.curators√ x x x branches are usernames and YES/NO. They switch boolean values on select√ x x x on second select, edited accounts are send to the server√ √ games.append (+)√ √ √ add an add branch for every submission from submissions.json√ √ √ append.link = /games_append_new√ √ √ one of games.append.submission[i].branches.select() should open a file input for the game's icon√ √ √ send game data with submission index to the server√ √ √ server: add game√ √ √ server: remove old submission√ √ √ server: send email to appropriate curator√ √ √ server: add game icon as well
√ √ √ support edits to submission.branches√ √ √ √ /submissions_replace√ √ √ √ /submissions_remove√ √ √ games.replace√ √ √ √ same as accounts.replace√ fix age.month calculation√ change games administration√ √ add game.remove to every game in search results and featured games (/games_remove)√ √ add game.edit to every game in search and featured, too (/games_replace)
√ √ client: /games_remove query
√ √ client: /games_replace query
√ √ server: /games_remove handler
√ √ server: /games_replace handler√ change accounts administration√ √ accounts sends /accounts to server to search by accounts[] by email√ √ accounts.account.edit (/accounts_replace)√ √ √ fix server/accounts_replace (it overwrites accounts[] with only the account edited)√ √ √ fix client/accounts_replace also (the data was not converted right again, a JSON/JS issue)√ √ accounts.account.remove (/accounts_remove)√ √ server: /accounts handler√ √ server: /accounts_replace handler√ √ √ modify server:searchAccounts() to have a completeReturn boolean argument√ √ server: /accounts_remove handler√ server: fix addGame() function so it includes game.(reviews,featured,etc)√ edit bubbles without icons so tag.label.text displays without clicking on it√ remove icon: (-)√ add remove icon to client: images.push(loadImage())? server: in registration email, add link to delete account (http://host.com/accounts_remove?oldAccount=username@domain.com)? add html versions of the emails? √ registration? √ curator approval? ? submission approval
? ? curator application
√ server: fix /curate handler when client applies to curate and is already approved
√ add "more" bubble capability and backwards parent references
√ √ create MAX_BRANCHES
√ √ edit bubble constructor: account for more bubbles and which have extra==true
√ √ edit bubble.addBranch() to account for MAX_BRANCHES
√ √ edit bubble.display()
√ √ add bubble.parent reference and gameBubble.rating
√ √ √ use both for /rate bubbles
√ √ √ use former for /more bubbles
√ √ √ add parent argument for bubble constructor
√ √ √ modify search, random, and featured results to set game.ratings.star.parent
√ √ edit bubbles that receive server results
√ √ √ /search
√ √ √ /featured
√ √ √ /submissions
√ √ √ /accounts
√ √ √ /random√ √ the icon is: (•••)√ √ when pressed, parent.bubbles changes to display the rest of the results (disable selection with bubble.link = "/more")
√ √ add bubble.rotate(): all branches shift clockwise 1 step, all branches.branches rotate correctly and update their anchors
√ server: change RESULT_MAX to be ~30> what to do with author bubbles> • add authors.json> · • links[]> · • name
> · > edit /curate handler to modify authors
> · > edit /games_append handler to modify authors> > if no links are specified, the default link is a google search of the game and the author: https://google.com/search?q=author+game&rls=en&ie=UTF-8&oe=UTF-8> > edit curation and administration according to addition of author.links
> > > curator suggests author name and links
> > > admin: reviews suggestions for new and existing authors to attribute to the game. Existing authors are a result of server’s /author search handler
> > > admin: can edit authors to modify author.links
> > server: /author search handler (searches authors, not games by a given author)
> > add searchByAuthor for games
> > > server: modify games.byTag to include authors[] list
> > > server: within searchGamesByTag, also check authors and add results to another search results array to have: nameResults, tagResults, and now authorResults
> > > client: modify games.authors[i].select() to open a search of games by that author
> > > client: add results by author to search bubble
> > server: keep games array synchronized with authors array
> > > game.authors pulls links from authors on demand
> > > authors.remove() => when server tries to pull that author’s links for a game and returns null, that author is deleted from game.authors
> server: improve password encryption
> > picks a seed
> > scrambles using the seed, bounded with the remainder function. The resulting characters have multiple possible original characters.
> > appends the seed to the end of the code and stores in accounts[i].password
√ only this.bubbles.updateAnchor() if this.extension changes or window is resized
? server: fix /random handler
> improve search functions to use the latter letters when hashing
> consolidate tag, name, and author search types
> > client: attach all incoming search results to the search bubble
> ? client: for all tag and author auto-searches, fix references to search bubble
> > server: for each term, check name, then tag, then author, using a single results array
